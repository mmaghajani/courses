#BlueJ class context
comment0.params=artist\ title\ filename
comment0.target=Track(java.lang.String,\ java.lang.String,\ java.lang.String)
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ Track.\n\ @param\ artist\ The\ track's\ artist.\n\ @param\ title\ The\ track's\ title.\n\ @param\ filename\ The\ track\ file.\ \n
comment1.params=filename
comment1.target=Track(java.lang.String)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Track.\n\ It\ is\ assumed\ that\ the\ file\ name\ cannot\ be\n\ decoded\ to\ extract\ artist\ and\ title\ details.\n\ @param\ filename\ The\ track\ file.\ \n
comment2.params=
comment2.target=java.lang.String\ getArtist()
comment2.text=\n\ Return\ the\ artist.\n\ @return\ The\ artist.\n
comment3.params=
comment3.target=java.lang.String\ getTitle()
comment3.text=\n\ Return\ the\ title.\n\ @return\ The\ title.\n
comment4.params=
comment4.target=java.lang.String\ getFilename()
comment4.text=\n\ Return\ the\ file\ name.\n\ @return\ The\ file\ name.\n
comment5.params=field
comment5.target=java.lang.String\ getField(java.lang.String)
comment5.text=\n\ Return\ the\ value\ of\ the\ named\ field.\n\ The\ field\ should\ be\ an\ element\ of\ Track.FIELDS\n\ @param\ field\ Which\ field\ to\ return.\n
comment6.params=
comment6.target=java.lang.String[]\ getFields()
comment6.text=\n\ Return\ the\ values\ of\ the\ fields.\n\ @return\ The\ fields.\n
comment7.params=
comment7.target=java.lang.String\ getDetails()
comment7.text=\n\ Return\ details\ of\ the\ track\:\ artist,\ title\ and\ file\ name.\n\ @return\ The\ track's\ details.\n
comment8.params=artist\ title\ filename
comment8.target=void\ setDetails(java.lang.String,\ java.lang.String,\ java.lang.String)
comment8.text=\n\ Set\ details\ of\ the\ track.\n\ @param\ artist\ The\ track's\ artist.\n\ @param\ title\ The\ track's\ title.\n\ @param\ filename\ The\ track\ file.\ \n
numComments=9
